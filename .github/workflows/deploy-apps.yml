name: Deploy Apps

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
  workflow_dispatch:

env:
    OUTPUT_FOLDER: .output
    DOTNET_VERSION: "7.x"
    DOTNET_VERSION_FUNC: "6.0.x"
    AZURE_FUNCTIONAPP_PACKAGE_PATH: './src/functions' 
    SWA_PROJECT: './src/web'

jobs:
    deploy-swa:
        runs-on: windows-latest
        steps:
            - name: 'Checkout Code'
              uses: actions/checkout@v2

            - name: Setup .NET
              uses: actions/setup-dotnet@v3
              with:
                  dotnet-version: ${{ env.DOTNET_VERSION }}

            # - name: Install dependencies
            #   run: dotnet restore 
            #   working-directory: ${{ env.SWA_PROJECT }}

            # - name: Build
            #   run: dotnet build --configuration Release --no-restore             
            #   working-directory: ${{ env.SWA_PROJECT }}

            # - name: Publish
            #   run: dotnet publish --configuration Release --no-build --no-restore --output ${{ env.OUTPUT_FOLDER }}                        
            #   working-directory: ${{ env.SWA_PROJECT }}

            # - name: Publish website output
            #   uses: actions/upload-artifact@v3
            #   with:
            #    name: website
            #    path: ${{ env.OUTPUT_FOLDER }}

            - name: '.NET Build'
              shell: pwsh
              run: |
                pushd './${{ env.SWA_PROJECT }}'
                dotnet build --configuration Release --output ./output
                popd

            - name: 'Login to Azure'
              uses: Azure/login@v1
              with:
                creds: ${{ secrets.AZURE_CREDENTIALS }}

            - name: Get SWA deployment token
              uses: azure/CLI@v1   
              id: swa-token
              with:
                inlineScript: |
                    SWA_DEPLOYMENT_TOKEN=$(az staticwebapp secrets list -n 'swa-${{ secrets.NAME_SUFFIX }}' -o tsv --query properties.apiKey)
                    echo "::add-mask::$SWA_DEPLOYMENT_TOKEN"
                    echo SWA_DEPLOYMENT_TOKEN=$SWA_DEPLOYMENT_TOKEN >> $GITHUB_ENV


            - name: 'Deploy SWA'
              uses: Azure/static-web-apps-deploy@v1
              with: 
                azure_static_web_apps_api_token: ${{ env.SWA_DEPLOYMENT_TOKEN }}
                app_location: ${{ env.SWA_PROJECT }}/output
                action: "upload"
                

               
    # deploy-swa:
    #     runs-on: ubuntu-latest 
    #     environment: production
    #     needs: [build-swa]    
    #     permissions:
    #         id-token: write
    #         contents: read
    #         pull-requests: write
    #     steps:
    #         - name: 'Checkout Code'
    #           uses: actions/checkout@v2

    #         - name: 'Login to Azure'
    #           uses: Azure/login@v1
    #           with:
    #             creds: ${{ secrets.AZURE_CREDENTIALS }}

    #         - name: Get SWA deployment token
    #           uses: azure/CLI@v1   
    #           id: swa-token
    #           with:
    #             inlineScript: |
    #                 SWA_DEPLOYMENT_TOKEN=$(az staticwebapp secrets list -n 'swa-${{ secrets.NAME_SUFFIX }}' -o tsv --query properties.apiKey)
    #                 echo "::add-mask::$SWA_DEPLOYMENT_TOKEN"
    #                 echo SWA_DEPLOYMENT_TOKEN=$SWA_DEPLOYMENT_TOKEN >> $GITHUB_ENV

    #         - name: Download website
    #           uses: actions/download-artifact@v1
    #           with:
    #             name: website
    #             path: ${{ github.workspace }}/${{ env.OUTPUT_FOLDER }}

    #         - name: Deploy Frontend
    #           uses: Azure/static-web-apps-deploy@v1
    #           with:
    #             azure_static_web_apps_api_token: ${{ steps.swa-token.outputs.SWA_DEPLOYMENT_TOKEN }}
    #             repo_token: ${{ secrets.GITHUB_TOKEN }}
    #             action: "upload"
    #             ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
    #             # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
    #             app_location: "${{ github.workspace }}/${{ env.OUTPUT_FOLDER }}"
    #             ###### End of Repository/Build Configurations ######

    # deploy-function:
    #     runs-on: windows-latest
    #     environment: production
    #     steps:
    #         - name: 'Checkout Code'
    #           uses: actions/checkout@v2

    #         - name: 'Login to Azure'
    #           uses: Azure/login@v1
    #           with:
    #             creds: ${{ secrets.AZURE_CREDENTIALS }}

    #         - name: 'Setup .NET'
    #           uses: actions/setup-dotnet@v1
    #           with:
    #             dotnet-version: ${{ env.DOTNET_VERSION_FUNC }}

    #         - name: '.NET Build'
    #           shell: pwsh
    #           run: |
    #             pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
    #             dotnet build --configuration Release --output ./output
    #             popd

    #         - name: 'Deploy Azure Function App'
    #           uses: Azure/functions-action@v1
    #           id: fa
    #           with:
    #             app-name: 'func-${{ secrets.NAME_SUFFIX }}'
    #             package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output

